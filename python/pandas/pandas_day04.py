# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16wRVBDPzUp5U4H_dF_C_nRPxqBQMu82e
"""

# !sudo apt-get install -y fonts-nanum
# !sudo fc-cache -fv
# !rm ~/.cache/matplotlib -rf

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.pyplot as plt

plt.rc('font', family="NanumBarunGothic")

df=pd.read_csv('./seoul.csv')

df.shape

df.info()

df.sample()

###결측치 보기 -> 중요함
df.isnull().mean().plot.barh(figsize=(7,9))

#사용하지 않는 컬러
#drop
col = ['상호명', '상권업종대분류명', '시군구명','경도','위도','시도명']



df = df[col].copy()



###서울특별시만 가져오기...
df.head()



df['시도명'].unique
###어떤 시군구명 있는지ㅣ 보고 가졍괴..
df['시군구명'].unique()

df=df.drop(['시도명'],axis=1)

#상호명을 소문자로 바꾼 값을 저장하기
df['상호명_소문자'] = df['상호명'].str.lower()

#베스킨라빈스 배스킨라빈스 baskinrobbins
#contains를 사용해 해당 글자가 있는 row만 가져오기
df['상호명_소문자'].str.contains('(베|배)스킨라빈스|baskinrobbins').fillna(False)

df.loc[df['상호명_소문자'].str.contains('(베|배)스킨라빈스|baskinrobbins').fillna(False), '상호명_소문자']

#던킨 | dunkin
df.loc[df['상호명_소문자'].str.contains('던킨|dunkin').fillna(False), '상호명_소문자']

#던킨+배스킨라빈스
df_31 = df[df['상호명_소문자'].str.contains('(베|배)스킨라빈스|baskinrobbins|던킨|dunki').fillna(False)].copy()

df_31

df_31.loc[df_31['상호명_소문자'].str.contains('(베|배)스킨라빈스|baskinrobbins').fillna(False), '브랜드명'] = '배스킨라빈스' 
#물결(~) 하면 반대가됨

df_31

df_31['브랜드명'] = df_31['브랜드명'].fillna('던킨도너츠')

df_31

#잘됐는지 확인.. isin을 이용하여 상권업종대분류명== 음식인것만 남기기 
df_31['상권업종대분류명'].value_counts()

df_31[df_31['상권업종대분류명'].isin(['소매'])]

df_31 = df_31[~df_31['상권업종대분류명'].isin(['소매'])].copy()

df_31['상권업종대분류명'].value_counts()

#normalize로 
df_31['브랜드명'].value_counts(normalize=True).plot.bar()

brand_count=df_31['브랜드명'].value_counts()

#countplot그리기
g=sns.countplot(data=df_31, x='브랜드명',order=brand_count.index)

for i, val in enumerate(brand_count.index) :
  g.text(x=1, y=brand_count[i], s=brand_count[i])

plt.figure(figsize=(15,4))
g=sns.countplot(data=df_31,x='시군구명',hue='브랜드명')



table_city_brand = df_31.pivot_table(index='시군구명', columns='브랜드명', values='상호명', aggfunc='count')

table_city_brand



for i, val in table_city_brand.iterrows():
  dunkin = val['던킨도너츠']
  baskin = val['배스킨라빈스']
  print(dunkin, baskin)

plt.figure(figsize=(15,4))
g=sns.countplot(data=df_31, x='시군구명', hue='브랜드명', order=table_city_brand.index)

index_no = 0
for i, val in table_city_brand.iterrows():
  dunkin = val['던킨도너츠']
  baskin=val['배스킨라빈스']
  g.text(x=index_no, y=dunkin, s=dunkin)
  g.text(x=index_no, y=baskin, s=baskin)
  index_no=index_no+1

###scatterplot
df_31[['위도','경도']].plot.scatter(x='위도', y='경도')

# seaborn의 scatterplot으로hue에 베라 던킨 구분
sns.scatterplot(data=df_31, x='경도',y='위도',hue='브랜드명')

#jlintplot
sns.jointplot(data=df_31, x='경도',y='위도', kind='hex')

### Falium라는 지도를 그릴수 있는 라이브러리 사용

#내일와서 seoul.csv파일 올려놓기

